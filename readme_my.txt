//----------------------------------------------------------------------------------------------------------------------------------|
ссылки для работы:
типограф https://www.artlebedev.ru/typograf/
//----------------------------------------------------------------------------------------------------------------------------------|

//----------------------------------------------------------------------------------------------------------------------------------|
// Заметки: html
// тег <input> с классом radio должны иметь одинаковые имена             
// для реверсивной работы    
//                                            
// Таблички:                                          
//   <table></table>                                         
//                                            
//                                            
//                                            
//                                            
//                                            
//                                            
//                                            
//                                            
//                                            
//----------------------------------------------------------------------------------------------------------------------------------|

//==================================================================================================================================|

//----------------------------------------------------------------------------------------------------------------------------------|
// Заметки: CSS
// font - шрифт/фонд-все фонды прописаны шрифтом(техника запоминания)
// !important; - свойство которое делает стиль приоритетным не смотря не на что.Пример:
// p { text-align: left;!important }
//
//------------------------------------------------------------------------------------------------------------------
// Вытаскиваем теги в CSS:
// id ="something"      / #something {стили}; нельзя многократно исполнение в HTML.
// p - тег              / p {стили};
// class="something"    / .something {стили}; можно многократно исполнение в HTML.
// <img alt="something">/ img[alt="something"] {стили}; тег по атрибуту.
//--------------------------------------------------------------------------------------------------------------------
// Основы свойств {стилей}:
// color: (цвет);
// 
// Цвет фона и свойства фона:
// background-color: (цвет фона).
// background-image: url(ссылка на картинку) / ставит фон картинку.Если картинка не покрывает фон то дублируется до полного закрытия.
// background-repeat: no-repeat; / Уберает повторения,оставляет только одну картинку. 
// background-position: 30px 40px; / управляет расположением картинки (30px-x ось),(40px-y ось).
// background: url(ссылка на картинку) no-repeat 30px 40px; / для сокращения перечислим ЧЕРЕЗ ПРОБЕЛ.
//
// Рамки:(Добавляя рамки ТОЛЩИНА ИХ добавляется в пространство тела учитывать при составлении расположения)
// border: 4px solid black; / 4px-толщина solid-твердый и третьея поз.цвет; ЧЕРЕЗ ПРОБЕЛ.
//
//---------------------------------------------------------------------------------
// Удаление стоковых стилей:
// (например точка при теге <ul><li>element</li></ul>)
// <ul></ul> родительский тег его свойства наследуют дочерние теги <li></li>.
// или классом или любым удобным способом получаем тег в CSS и свойством.Пример:
// ul { list-style-type:none } убрали стоковые стили (точки перед эл.списка).
//
// (подчеркивание ссылок)
// или классом или любым удобным способом получаем тег в CSS и свойством.Пример:
// a { text-decoration: none; }
//----------------------------------------------------------------------------------
//
// Расположения эле.text:
// text-align: center; /  впринципе читаемо и интуитивно. имеются еще разные стили расположения.
//----------------------------------------------------------------------------------------------------------------------------------|  
// Прочие св-ва , подсказки:
// opacity: 0.9; - необтикаемость  
// overflow: hidded; - скрывает перекрытия                                                                
//----------------------------------------------------------------------------------------------------------------------------------|                                                                   
//  Псевдоклассы и Псевдоэлементы:
//----------------------------------------------------------
//  Псевдоклассы:
//  :hover - эффект наведения.
//  :active - эффект нажатия (хорошо видно:зажали потащили).
//  :first-child - фиксирует стиль за первым элементом в дочернем списке.
//  :last-child - фиксирует стиль за последним элементом в дочернем списке.
//  :nth-child(номер дочернего списка сверху вниз,без ковычек и пробелов).варианты монипуляций 2n - каждый четный.
//  Можно воспользоваться документацией для увеличения кругозора этих чудесных свойств.
//  Пример: selector:nth-child(1) - первый элемент списка итд 
//----------------------------------------------------------
//  Псевдоэлементы: 
//  Их всего 4 
//
//
//
//
//
//============================================================================================||
// Рабочии ссылкм , сайты - инструменты: 
// 1) Проверка на поддержку технологий                       : https://caniuse.com/ 
// 2) Сжатие картинок                                        : https://tinypng.com/
// 3) Валидатор , проверка на ошибки : сайта , файлов , кода : https://validator.w3.org/
// 4) CSS3 Генератор , для создания сложных стилей CSS       : https://css3generator.com
//  Кросс браузерность совместимось html/css кода на разных браузерах 
//    1) Проверка на самых популярных .
//    2) Проверка на EI 6 и выше версирй .
//    3) Писать по технической карте Клиент сам должен устанавливать приоритет его сайта .
//============================================================================================||   
//  тексты в проекте сортировка : серый самый мелкий на сайте .
//  .slider-content {
//     color: #6c6c6c;
//     font-size: 14px;
//     font-weight: 300;
//     width: 458px;      
//     line-height: 24px; 
//  }
//
//
//
//
//
//
//
//
//
//
//